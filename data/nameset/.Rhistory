K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
View(prior.dic)
prior.author <- table(df$clusterid) / length(df$clusterid)
output <- rbind(prior.dic, prior.author)
colnames(output) <- author
row.names(output) <- c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author")
p.journal <- function(df) {
# the total word dictionary
dic <- word.infor(df)
all <- sum(dic)
dic <- names(dic)
author <- sort(unique(df$clusterid))
K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
prior.author <- table(df$clusterid) / length(df$clusterid)
output <- rbind(prior.dic, prior.author)
colnames(output) <- author
row.names(output) <- c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author")
return(output)
}
p.journal(AKumar)
ak <- p.journal(AKumar)
ak[1,] == check[1,]
View(AKumar)
split_data <- function(m){
#input: m = one class of one nameset
#output: train and test dataset
obs <- nrow(m)
index <- sample(1:obs,round(obs/2))
train_data <- m[index,]
test_data <- m[-index,]
return(list(train_data = train_data, test_data = test_data))
}
split_data(AKumar)
round(1.4)
round(1.5)
w <- 1:2
w
split_data <- function(df){
#input: m = one class of one nameset
#output: train and test dataset
obs <- 1:nrow(df)
index <- sample(obs, round(obs/2))
train_data <- obs[index, ]
test_data <- obs[-index,]
output <- list(train_data = train_data, test_data = test_data)
return(output)
}
split_data(AKumar)
df = AKumar
obs <- 1:nrow(df)
obs
index <- sample(obs, round(obs/2))
index
split_data <- function(df){
#input: m = one class of one nameset
#output: train and test dataset
obs <- nrow(df)
index <- sample(1:obs, round(obs/2))
train_data <- 1:obs[index, ]
test_data <- 1:obs[-index,]
output <- list(train_data = train_data, test_data = test_data)
return(output)
}
split_data(AKumar)
split_data <- function(df){
#input: m = one class of one nameset
#output: train and test dataset
obs <- 1:nrow(df)
index <- sample(1:nrow(df), round(obs/2))
train_data <- obs[index, ]
test_data <- obs[-index,]
output <- list(train_data = train_data, test_data = test_data)
return(output)
}
split_data(AKumar)
split_data <- function(df){
#input: m = one class of one nameset
#output: train and test dataset
obs <- 1:nrow(df)
index <- sample(1:nrow(df), round(nrow(df)/2))
train_data <- obs[index, ]
test_data <- obs[-index,]
output <- list(train_data = train_data, test_data = test_data)
return(output)
}
split_data(AKumar)
obs <- 1:nrow(df)
index <- sample(1:nrow(df), round(nrow(df)/2))
train_data <- obs[index, ]
test_data <- obs[-index,]
index
obs
obs[1]
split_data <- function(df){
#input: m = one class of one nameset
#output: train and test dataset
obs <- 1:nrow(df)
index <- sample(1:nrow(df), round(nrow(df)/2))
train_data <- obs[index]
test_data <- obs[-index]
output <- list(train_data = train_data, test_data = test_data)
return(output)
}
split_data(akum)
split_data(AKumar)
p.journal(AKumar)
ak <- p.journal(AKumar)
data.lib <- "~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/data/nameset"
data.files <- list.files(path = data.lib, "*.txt")
data.files
read.data <- function(input) {
df <- data.frame(scan(input, what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">", quiet=TRUE), stringsAsFactors=F)
df$clusterid <- sub("_.*","",df$Coauthor) # author_id
df$citationid <- sub(".*_(\\w*)\\s.*", "\\1", df$Coauthor) # paper_id
df$coauthor <- gsub("<","",sub("^.*?\\s","", df$Coauthor))
df$Paper <- gsub("<","",df$Paper)
}
AKumar <- read.data(data.files[2])
ak <- p.journal(AKumar)
AKumar <- read.data(data.files[2])
read.data <- function(input) {
df <- paste(data.lib, input, sep="/")
df <- data.frame(scan(df, what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">", quiet=TRUE), stringsAsFactors=F)
df$clusterid <- sub("_.*","",df$Coauthor) # author_id
df$citationid <- sub(".*_(\\w*)\\s.*", "\\1", df$Coauthor) # paper_id
df$coauthor <- gsub("<","",sub("^.*?\\s","", df$Coauthor))
df$Paper <- gsub("<","",df$Paper)
}
AKumar <- read.data(data.files[2])
dat <- paste(data.lib, data.files[2], sep="/")
dat
df <- data.frame(scan(dat, what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">", quiet=TRUE), stringsAsFactors=F)
View(df)
input <- data.files[2]
input
df <- paste(data.lib, input, sep="/")
df
df <- data.frame(scan(df, what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">", quiet=TRUE), stringsAsFactors=F)
View(df)
read.data <- function(input) {
df <- paste(data.lib, input, sep="/")
df <- data.frame(scan(df, what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">", quiet=TRUE), stringsAsFactors=F)
df$clusterid <- sub("_.*","",df$Coauthor) # author_id
df$citationid <- sub(".*_(\\w*)\\s.*", "\\1", df$Coauthor) # paper_id
df$coauthor <- gsub("<","",sub("^.*?\\s","", df$Coauthor))
df$Paper <- gsub("<","",df$Paper)
return(df)
}
AKumar <- read.data(data.files[2])
ak <- p.journal(AKumar)
ak[1,] == check[1,]
index <- split_data(AKumar)
split_data <- function(df){
#input: m = one class of one nameset
#output: train and test dataset
obs <- nrow(df)
output <- sample(1:obs, round(obs/2))
return(output)
}
index <- split_data(AKumar)
train <- AKumar[index, ]
test <- AKumar[-index, ]
ak.train <- p.journal(train)
df=train
dic <- word.infor(df)
all <- sum(dic)
dic <- names(dic)
author <- sort(unique(df$clusterid))
K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
prior.author <- table(df$clusterid) / length(df$clusterid)
output <- rbind(prior.dic, prior.author)
colnames(output) <- author
row.names(output) <- c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author")
View(output)
ak.train <- p.journal(train)
AKumar <- read.data(data.files[2])
unique(AKumar$clusterid)
unique(train$clusterid)
unique(test$clusterid)
table(AKumar$clusterid)
df=AKumar
author <- unique(df$clusterid)
output <- numeric(0)
output
for(i in 1:length(author)) {
obs <- which(df$clusterid == author[i])
random <- sample(1:obs, round(obs/2))
output <- c(output, random)
}
i=1
author <- unique(df$clusterid)
output <- numeric(0)
obs <- which(df$clusterid == author[i])
obs
random <- sample(1:obs, round(obs/2))
sample(1:obs, round(obs/2))
obs
random <- sample(obs, round(length(obs)/2))
random
split_data <- function(df){
author <- unique(df$clusterid)
output <- numeric(0)
for(i in 1:length(author)) {
obs <- which(df$clusterid == author[i])
random <- sample(obs, round(length(obs)/2))
output <- c(output, random)
}
return(output)
}
AKumar <- read.data(data.files[2])
index <- split_data(AKumar)
train <- AKumar[index, ]
test <- AKumar[-index, ]
unique(train$clusterid)
unique(test$clusterid)
ak.train <- p.journal(train)
df=train
dic <- word.infor(df)
all <- sum(dic)
dic <- names(dic)
author <- sort(unique(df$clusterid))
K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
prior.author <- table(df$clusterid) / length(df$clusterid)
output <- rbind(prior.dic, prior.author)
colnames(output) <- author
row.names(output) <- c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author")
View(output)
output[1,] == check1,
output[1,] == check[1,]
train$Journal[train$clusterid == 14,]
train$clusterid == 14
table(AKumar$clusterid)
table(train$clusterid)
table(test$clusterid)
i=14
author <- sort(unique(df$clusterid))
subdata <- subset(df, clusterid == author[j])
subdic <- word.infor(subdata)
p.title.seen <- sum(subdic[subdic >= 2]) / sum(subdic)
p.title.seen
p.title.unseen <- 1 - p.seen
p.title.unseen
prior_p <- function(j, df) {
author <- sort(unique(df$clusterid))
subdata <- subset(df, clusterid == author[j])
subdic <- word.infor(subdata)
# probability of the author publish a paper on a journal with a seen word in the journal title
p.title.seen <- sum(subdic[subdic >= 2]) / sum(subdic)
# probability of the author publish a paper on a journal with a unseen word in the journal title
p.title.unseen <- 1 - p.title.seen
# probability of the author publish a paper on a journal with kth word condition on the jornal name has a seen word
p.word.seen <- find_loc(subdic)
# probability of the author publish a paper on a journal with kth word condition on the jornal name has a unseen word
p.word.unseen <- 1 / (all)
output <- c(p.title.seen, p.title.unseen, p.word.seen, p.word.unseen)
return(output)
}
df=train
dic <- word.infor(df)
all <- sum(dic)
dic <- names(dic)
author <- sort(unique(df$clusterid))
K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
prior.author <- table(df$clusterid) / length(df$clusterid)
output <- rbind(prior.dic, prior.author)
colnames(output) <- author
row.names(output) <- c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author")
View(output)
j
j=14
author <- sort(unique(df$clusterid))
subdata <- subset(df, clusterid == author[j])
subdic <- word.infor(subdata)
p.title.seen <- sum(subdic[subdic >= 2]) / sum(subdic)
p.title.seen
sum(subdic[subdic >= 2]) / sum(subdic)
p.title.seen
prior_p(14,train)
q <- matrix(1:K, ncol = 1)
q
dic <- word.infor(df)
all <- sum(dic)
dic <- names(dic)
author <- sort(unique(df$clusterid))
K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
View(prior.dic)
j
author <- sort(unique(df$clusterid))
subdata <- subset(df, clusterid == author[j])
subdic <- word.infor(subdata)
p.title.seen <- sum(subdic[subdic >= 2]) / sum(subdic)
p.title.unseen <- 1 - p.title.seen
p.word.seen <- find_loc(subdic)
p.word.unseen <- 1 / (all)
output <- c(p.title.seen, p.title.unseen, p.word.seen, p.word.unseen)
output
j=6
author <- sort(unique(df$clusterid))
subdata <- subset(df, clusterid == author[j])
subdic <- word.infor(subdata)
p.title.seen <- sum(subdic[subdic >= 2]) / sum(subdic)
p.title.unseen <- 1 - p.title.seen
p.word.seen <- find_loc(subdic)
p.word.unseen <- 1 / (all)
output <- c(p.title.seen, p.title.unseen, p.word.seen, p.word.unseen)
output
author
subdata <- subset(df, clusterid == author[j])
subdata
subdic <- word.infor(subdata)
subdic
df=subdata
dic <- Corpus(VectorSource(df$Journal))
dic <- tm_map(dic, content_transformer(tolower))
dic <- tm_map(dic, removePunctuation)
dic <- tm_map(dic, removeWords, stopwords("english"))
dic <- lapply(dic, s)
dic <- unlist(dic)
dic <- sort(table(dic), decreasing = T)
dic
df=AKumar
dic <- Corpus(VectorSource(df$Journal))
dic <- tm_map(dic, content_transformer(tolower))
dic <- tm_map(dic, removePunctuation)
dic <- tm_map(dic, removeWords, stopwords("english"))
dic <- lapply(dic, s)
dic <- unlist(dic)
dic <- sort(table(dic), decreasing = T)
head(dic)
which(names(dic) == "")
dic <- dic[-which(names(dic) == ""),]
dic <- dic[-which(names(dic) == "")]
word.infor <- function(df) {
dic <- Corpus(VectorSource(df$Journal))
dic <- tm_map(dic, content_transformer(tolower))
dic <- tm_map(dic, removePunctuation)
dic <- tm_map(dic, removeWords, stopwords("english"))
dic <- lapply(dic, s)
dic <- unlist(dic)
dic <- sort(table(dic), decreasing = T)
dic <- dic[-which(names(dic) == "")]
return(dic)
}
df=train
dic <- word.infor(df)
all <- sum(dic)
dic <- names(dic)
author <- sort(unique(df$clusterid))
K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
prior.author <- table(df$clusterid) / length(df$clusterid)
output <- rbind(prior.dic, prior.author)
colnames(output) <- author
row.names(output) <- c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author")
View(output)
j=6
author <- sort(unique(df$clusterid))
subdata <- subset(df, clusterid == author[j])
subdic <- word.infor(subdata)
p.title.seen <- sum(subdic[subdic >= 2]) / sum(subdic)
p.title.unseen <- 1 - p.title.seen
p.title.seen
dic <- Corpus(VectorSource(df$Journal))
subdata
View(subdata)
df=subdata
dic <- Corpus(VectorSource(df$Journal))
dic <- tm_map(dic, content_transformer(tolower))
dic <- tm_map(dic, removePunctuation)
dic <- tm_map(dic, removeWords, stopwords("english"))
dic <- lapply(dic, s)
dic <- unlist(dic)
dic
dic <- sort(table(dic), decreasing = T)
dic
dic <- dic[-which(names(dic) == "")]
dic
which(names(dic) == ""
)
dic
dic <- sort(table(dic), decreasing = T)
dic <- Corpus(VectorSource(df$Journal))
dic <- tm_map(dic, content_transformer(tolower))
dic <- tm_map(dic, removePunctuation)
dic <- tm_map(dic, removeWords, stopwords("english"))
dic <- lapply(dic, s)
dic <- unlist(dic)
dic <- sort(table(dic), decreasing = T)
which(names(dic) == "")
-which(names(dic) == "")
dic <- Corpus(VectorSource(df$Journal))
dic <- tm_map(dic, content_transformer(tolower))
dic <- tm_map(dic, removePunctuation)
dic <- tm_map(dic, removeWords, stopwords("english"))
dic <- lapply(dic, s)
dic <- unlist(dic)
dic <- sort(table(dic), decreasing = T)
if ("" %in% names(dic)) { dic <- dic[-1]}
dic
word.infor <- function(df) {
dic <- Corpus(VectorSource(df$Journal))
dic <- tm_map(dic, content_transformer(tolower))
dic <- tm_map(dic, removePunctuation)
dic <- tm_map(dic, removeWords, stopwords("english"))
dic <- lapply(dic, s)
dic <- unlist(dic)
dic <- sort(table(dic), decreasing = T)
if ("" %in% names(dic)) { dic <- dic[-1]}
return(dic)
}
df=train
dic <- word.infor(df)
all <- sum(dic)
dic <- names(dic)
author <- sort(unique(df$clusterid))
K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
prior.author <- table(df$clusterid) / length(df$clusterid)
output <- rbind(prior.dic, prior.author)
colnames(output) <- author
row.names(output) <- c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author")
View(output)
ak.train <- p.journal(train)
View(ak.train)
ak.test <- p.journal(test)
ak.train <- p.journal(train)
ak.test <- p.journal(test)
ak.train <- p.journal(AKumar)
length(c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author"))
ak <- p.journal(AKumar)
p.journal(AKumar)
df=AKumar
dic <- word.infor(df)
all <- sum(dic)
dic <- names(dic)
author <- sort(unique(df$clusterid))
K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
prior.author <- table(df$clusterid) / length(df$clusterid)
output <- rbind(prior.dic, prior.author)
colnames(output) <- author
row.names(output) <- c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author")
View(output)
ak <- p.journal(AKumar)
ak <- p.journal(AKumar)
ak.test <- p.journal(test)
ak <- p.journal(AKumar)
View(ak)
dim(ak)
df <- test
dic <- word.infor(df)
all <- sum(dic)
dic <- names(dic)
author <- sort(unique(df$clusterid))
K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
prior.author <- table(df$clusterid) / length(df$clusterid)
output <- rbind(prior.dic, prior.author)
colnames(output) <- author
row.names(output) <- c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author")
View(output)
ak.test <- p.journal(test)
ak <- p.journal(AKumar)
p.journal <- function(df, total_df) {
# the total word dictionary
dic <- word.infor(total_df)
all <- sum(dic)
dic <- names(dic)
author <- sort(unique(df$clusterid))
K <- length(author)
I <- length(dic)
q <- matrix(1:K, ncol = 1)
prior.dic <- apply(q, 1, prior_p, df)
prior.author <- table(df$clusterid) / length(df$clusterid)
output <- rbind(prior.dic, prior.author)
colnames(output) <- author
row.names(output) <- c("p.title.seen", "p.title.unseen", dic, "p.word.unseen", "prior.author")
return(output)
}
ak <- p.journal(AKumar, AKumar)
ak <- p.journal(AKumar, AKumar)
