file_names2
file_names2 <- sort(file_names2)
file_paths2 <- rep(NA_character_, length(file_names2))
for (i in 1:length(file_names2)) {
file_paths2[i] <- paste(bin_dir, file_names2[i], sep = "/")
}
file_paths2 <- sort(file_paths2)
img2 <- readImage(file_paths2[i])
mat <- imageData(img)
mat2 <- imageData(img2)
mat == mat2
img
img2
i
img <- readImage(file_paths[i])
img2 <- readImage(file_paths2[i])
mat <- imageData(img)
mat2 <- imageData(img2)
img
img2
mat == mat2
install.packages("Momocs")
library(Momocs)
View(mat)
View(mat2)
View(mat2)
View(mat)
View(mat)
mat[1,];mat2[1,]
install.packages("momocs")
install.packages("Momocs")
library(Momocs)
cbind(mat[1,],mat2[1,])
oc[[1]]
img <- resize(img2, 128, 128)
img1 <- thresh(img2, w=50, h=50, offset=0.05)
oc <- ocontour(bwlabel(img1))
plot(oc[[1]], type='l')
plot(oc[[2]], type='l')
plot(oc[[3]], type='l')
plot(oc[[1]], type='l')
img <- resize(img2, 128, 128)
img <- resize(img2, 128, 128)
oc <- ocontour(bwlabel(img1))
img <- resize(img2, 128, 128)
oc <- ocontour(img)
plot(oc[[1]], type='l')
?bwlabel
?thresh
img <- resize(img2, 128, 128)
oc <- ocontour(bwlabel(img1))
plot(oc[[1]], type='l')
oc[[1]]
length(oc[[1]])
x = readImage(system.file("images", "shapes.png", package="EBImage"))
display(x)
x = x[1:120,50:120]
display(x)
oc = ocontour(x)
plot(oc[[1]], type='l')
plot(oc[[2]], type='l')
oc
img <- resize(img2, 128, 128)
oc <- ocontour(bwlabel(img1))
plot(oc[[1:3]], type='l')
plot(oc[[1]], type='l')
lines(oc[[2]], col=2)
oc[[1]]
bwlabel(img1)
img <- resize(img2, 128, 128)
oc <- ocontour(bwlabel(img))
plot(oc[[1]], type='l')
lines(oc[[2]], col=2)
lines(oc[[3]], col=3)
i
i=1
img <- readImage(file_paths[i])
img2 <- readImage(file_paths2[i])
img <- resize(img2, 128, 128)
oc <- ocontour(bwlabel(img))
plot(oc[[1]], type='l')
display(img)
display(img2)
display(plot(oc[[1]], type='l'))
display(img1)
display(img)
oc <- ocontour(img)
oc <- ocontour(bwlabel(img))
oc <- ocontour(img)
i=1970
img <- readImage(file_paths[i])
img2 <- readImage(file_paths2[i])
img <- resize(img2, 128, 128)
oc <- ocontour(img)
display(img)
plot(oc[[1]], type='l')
plot(oc[[2]], type='l')
oc <- ocontour(bwlabel(img))
display(img)
plot(oc[[1]], type='l')
sum <- 0
for (j in 1:length(oc)) {
sum <- sum + sum(oc[[j]])
}
sum
oc
plot(oc[[1]])
plot(oc[[2]])
plot(oc[[3]])
plot(oc)
plot(oc[[1]], type='l')
sum <- 0
for (j in 1:length(oc)) {
sum <- sum + sum(oc[[j]])
points(oc[[j]])
}
i=1967
img <- readImage(file_paths[i])
img2 <- readImage(file_paths2[i])
img <- resize(img2, 128, 128)
oc <- ocontour(bwlabel(img))
display(img)
plot(oc[[1]], type='l')
sum <- 0
for (j in 1:length(oc)) {
sum <- sum + sum(oc[[j]])
points(oc[[j]])
}
i=1727
img <- readImage(file_paths[i])
img2 <- readImage(file_paths2[i])
img <- resize(img2, 128, 128)
oc <- ocontour(bwlabel(img))
plot(oc[[1]], type='l')
sum <- 0
for (j in 1:length(oc)) {
sum <- sum + sum(oc[[j]])
points(oc[[j]])
}
i=526
img <- readImage(file_paths[i])
img2 <- readImage(file_paths2[i])
img <- resize(img2, 128, 128)
oc <- ocontour(bwlabel(img))
display(img)
plot(oc[[1]], type='l')
sum <- 0
for (j in 1:length(oc)) {
sum <- sum + sum(oc[[j]])
points(oc[[j]])
}
oc
a<-oc[[1:2]]
a
a<-unlist(oc[[1]])
a
a<-unlist(oc[[132]])
a
a<-unlist(oc)
a
head(oc)
head(oc[[1]])
head(a)
a[600:620]
dim(oc[[1]])
i=20000
i=2000
img <- readImage(file_paths[i])
img2 <- readImage(file_paths2[i])
img <- resize(img2, 128, 128)
oc <- ocontour(bwlabel(img))
plot(oc[[1]], type='l')
oc[[1]]
oc[[2]]
mode(oc[[2]])
o<-oc[[1]]
o
mode(o)
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
c<-rbind(oc[j])
}
View(o)
oc <- ocontour(bwlabel(img))
plot(oc[[1]], type='l')
o<-oc[[1]]
sum <- 0
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
c<-rbind(oc[j])
points(oc[[j]])
}
points(o)
View(o)
img <- thresh(img2, w=50, h=50, offset=0.05)
oc <- ocontour(bwlabel(img))
plot(oc[[1]], type='l')
o<-oc[[1]]
sum <- sum(oc[[1]])
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
c<-rbind(oc[j])
}
img <- resize(img2, 128, 128)
img <- thresh(img, w=50, h=50, offset=0.05)
oc <- ocontour(bwlabel(img))
plot(oc[[1]], type='l')
o<-oc[[1]]
sum <- sum(oc[[1]])
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
c<-rbind(oc[j])
}
point(o)
plot(o)
o<-oc[[1]]
sum <- sum(oc[[1]])
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
o<-rbind(oc[j])
}
plot(o)
View(o)
o<-oc[[1]]
o
o<-unlist(oc[[1]])
o
o<-unlist(oc[[1]])
sum <- sum(oc[[1]])
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
o<-rbind(o,oc[j])
}
View(o)
o<-unlist(oc[[1]])
sum <- sum(oc[[1]])
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
o<-rbind(o,unlist(oc[j]))
}
j=2
unlist(oc[j])
oc[j]
length(unlist(oc[j]))
o<-as.data.frame(unlist(oc[[1]]))
o<-as.data.frame(unlist(oc[[1]]))
sum <- sum(oc[[1]])
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
o<-rbind(o,as.data.frame(unlist(oc[j])))
}
o<-as.data.frame(unlist(oc[[1]]))
o
View(o)
j
as.data.frame(unlist(oc[j]))
as.data.frame(unlist(oc[j]), ncol=2)
oc[[3]]
oc[[4]]
oc[[5]]
oc[[6]]
oc[[7]]
as.data.frame(unlist(oc[5]), ncol=2)
as.data.frame(unlist(oc[[1]]))
o<-matrix(unlist(oc[[1]]), nrow = 2)
o
View(o)
o<-matrix(unlist(oc[[1]]), ncol = 2)
View(o)
oc[[1]]
View(o)
o<-matrix(unlist(oc[[1]]), ncol = 2)
sum <- sum(oc[[1]])
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
o<-rbind(o,matrix(unlist(oc[j]), ncol=2))
}
View(o)
plot(o)
plot(oc[[1]])
o<-matrix(unlist(oc[[1]]), ncol = 2)
sum <- sum(oc[[1]])
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
o<-rbind(o,matrix(unlist(oc[j]), ncol=2))
plot(oc[[j]])
}
plot(oc[[1]])
o<-matrix(unlist(oc[[1]]), ncol = 2)
sum <- sum(oc[[1]])
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
o<-rbind(o,matrix(unlist(oc[j]), ncol=2))
points(oc[[j]])
}
plot(o)
range(o)
range(o[,1])
range(o[,2])
plot(matrix(unlist(oc),ncol = 2))
b <- do.call(rbind.data.frame, oc)
plot(b)
plot(oc[[1]])
for (j in 2:length(oc)) {
sum <- sum + sum(oc[[j]])
o<-rbind(o,matrix(unlist(oc[j]), ncol=2))
points(oc[[j]])
}
b <- do.call(rbind.data.frame, oc)
View(b)
img <- resize(img2, 128, 128)
img <- thresh(img, w=50, h=50, offset=0.05)
oc <- ocontour(bwlabel(img))
b <- do.call(rbind.data.frame, oc)
plot(b)
img <- resize(img2, 128, 128)
img2 <- thresh(img, w=50, h=50, offset=0.05)
oc <- ocontour(bwlabel(img))
oc2 <- ocontour(bwlabel(img2))
b <- do.call(rbind.data.frame, oc)
b2 <- do.call(rbind.data.frame, oc2)
plot(b)
plot(b2)
plot(b)
plot(b2)
?thresh
length(oc)
length(oc2)
img <- readImage(file_paths[i])
img2 <- readImage(file_paths2[i])
img <- readImage(file_paths[i])
img2 <- readImage(file_paths2[i])
img_01 <- resize(img2, 128, 128)
img_02 <- thresh(img_01, w=50, h=50, offset=0.05)
oc <- ocontour(bwlabel(img_01))
oc2 <- ocontour(bwlabel(img_02))
b <- do.call(rbind.data.frame, oc)
b2 <- do.call(rbind.data.frame, oc2)
plot(b)
plot(b2)
length(oc)
length(oc2)
n_x <- 16
n_y <- 16
x_Bin <- seq(0, 1, length.out=n_x)
y_Bin <- seq(0, 1, length.out=n_y)
freq_location <- as.data.frame(table(factor(findInterval(b2[,1], n_x), levels=1:n_x),
factor(findInterval(b2[,2], n_y), levels=1:n_y)))
freq_location
findInterval(b2[,1], n_x
)
x_Bin <- seq(0, 128, length.out=n_x)
y_Bin <- seq(0, 128, length.out=n_y)
freq_location <- as.data.frame(table(factor(findInterval(b2[,1], n_x), levels=1:n_x),
factor(findInterval(b2[,2], n_y), levels=1:n_y)))
freq_location
x_Bin
img_01 <- resize(img2, 256, 256)
img_02 <- thresh(img_01, w=50, h=50, offset=0.05)
oc2 <- ocontour(bwlabel(img_02))
sum <- 0
for (j in 1:length(oc2)) {
sum <- sum + sum(oc2[[j]])
}
b2 <- do.call(rbind.data.frame, oc2)
n_x <- 16
n_y <- 16
x_Bin <- seq(0, 128, length.out=n_x)
y_Bin <- seq(0, 128, length.out=n_y)
x_Bin
16*16
x_Bin <- seq(0, 256, length.out=n_x)
y_Bin <- seq(0, 256, length.out=n_y)
x_Bin
length.out
n_x
n_x <- 15
n_y <- 15
x_Bin <- seq(0, 256, length.out=n_x)
y_Bin <- seq(0, 256, length.out=n_y)
x_Bin
?length
length(x_Bin)
n_x <- 16
n_y <- 16
x_Bin <- seq(0, 256, length.out=n_x)
256/16
nR <- 5
rBin <- seq(0, 1, length.out=nR)
rBin
n_x <- 16
n_x
seq(0, 256, length.out=n_x)
n_x <- 17
seq(0, 256, length.out=n_x)
n_y <- 17
x_Bin <- seq(0, 256, length.out=n_x)
y_Bin <- seq(0, 256, length.out=n_y)
freq_location <- as.data.frame(table(factor(findInterval(b2[,1], x_Bin), levels=1:n_x),
factor(findInterval(b2[,2], x_Bin), levels=1:n_y)))
freq_location
n_x <- 16
n_y <- 16
x_Bin <- seq(0, 256, length.out=n_x)
y_Bin <- seq(0, 256, length.out=n_y)
freq_location <- as.data.frame(table(factor(findInterval(b2[,1], x_Bin), levels=1:n_x),
factor(findInterval(b2[,2], x_Bin), levels=1:n_y)))
freq_location
ncol(mat)
nrow(mat)
location_feature <- as.numeric(freq_location$Freq)/(ncol(b2)*nrow(b2))
location_feature
gray_feature
mat <- imageData(img)
mat2 <- imageData(img2)
n <- 128
nBin <- seq(0, 1, length.out = n)
freq_gray <- as.data.frame(table(factor(findInterval(mat, nBin), levels = 1:n)))
gray_feature <- as.numeric(freq_gray$Freq)/(ncol(mat)*nrow(mat))
gray_feature
n <- 256
nBin <- seq(0, 1, length.out = n)
freq_gray <- as.data.frame(table(factor(findInterval(mat, nBin), levels = 1:n)))
gray_feature <- as.numeric(freq_gray$Freq)/(ncol(mat)*nrow(mat))
cor(freq_gray,freq_location)
freq_gray
cor(gray_feature,location_feature)
freq_location
install.packages("momocs")
install.packages("Momocs")
install.packages("Momocs")
library(Momocs)
# install.packages(c("NLP", "tm"))
library("NLP")
library("tm")
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/output")
# here replace it with your own path or manually set it in RStudio
# to where this rmd file is located
# install.packages(c("NLP", "tm"))
library("NLP")
library("tm")
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/output")
# here replace it with your own path or manually set it in RStudio
# to where this rmd file is located
source('~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/lib/p.function.R', local = T)
attach("CleanData.RData")
AGupta <- trans.data(1)
df <- trans.data(1)
index <- read.csv("random_agupta.csv")
index <- index$x
result.class.j <- test.result(index, df, "j")
acc.j <- mean(as.numeric(result.class) == test$clusterid)
source("~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/lib/p.function.R", local = T)
source("~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/lib/title.test.R", local = T)
df <- trans.data(1)
index <- read.csv("random_agupta.csv")
index <- index$x
result.class.j <- test.result(index, df, "j")
acc.j <- mean(as.numeric(result.class) == test$clusterid)
write.csv(result.class.j, file = "~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/output/agupta.j.pred.csv")
time.journal <- system.time(test.result(index, df, "j"))
result.class.p <- test.result(index, df, "p")
acc.p <- mean(as.numeric(result.class) == test$clusterid)
write.csv(result.class.p, file = "~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/output/agupta.p.pred.csv")
time.paper <- system.time(test.result(index, df, "p"))
acc.j <- mean(as.numeric(result.class) == test$clusterid)
acc.j <- mean(as.numeric(result.class.j) == test$clusterid)
train <- df[index, ]
test <- df[-index, ]
result.class.j <- test.result(index, df, "j")
acc.j <- mean(as.numeric(result.class.j) == test$clusterid)
write.csv(result.class.j, file = "~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/output/agupta.j.pred.csv")
time.journal <- system.time(test.result(index, df, "j"))
result.class.p <- test.result(index, df, "p")
acc.p <- mean(as.numeric(result.class.p) == test$clusterid)
write.csv(result.class.p, file = "~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/output/agupta.p.pred.csv")
time.paper <- system.time(test.result(index, df, "p"))
result.class.c <- read.csv("coauthor_pred.csv")
result.class.c <- result.class.c$x
matching_matrix_coauthor <- matching_matrix(as.numeric(df$clusterid[-index]), result.class.c)
performance_coauthor <- performance_statistics(matching_matrix_coauthor)
matching_matrix_journal <- matching_matrix(as.numeric(df$clusterid[-index]),result.class.j)
performance_journal <- performance_statistics(matching_matrix_journal)
matching_matrix_paper <- matching_matrix(as.numeric(df$clusterid[-index]), result.class.p)
source('~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/lib/evaluation_measures.R', local = T)
source('~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/lib/test_result.R', local = T)
result.class.c <- read.csv("coauthor_pred.csv")
result.class.c <- result.class.c$x
matching_matrix_coauthor <- matching_matrix(as.numeric(df$clusterid[-index]), result.class.c)
performance_coauthor <- performance_statistics(matching_matrix_coauthor)
matching_matrix_journal <- matching_matrix(as.numeric(df$clusterid[-index]),result.class.j)
performance_journal <- performance_statistics(matching_matrix_journal)
matching_matrix_paper <- matching_matrix(as.numeric(df$clusterid[-index]), result.class.p)
performance_paper <- performance_statistics(matching_matrix_paper)
compare_df <- data.frame(method = c("coauthor", "paper", "journal"),
precision = c(performance_coauthor$precision, performance_paper$precision, performance_journal$precision),
recall = c(performance_coauthor$recall, performance_paper$recall, performance_journal$recall),
f1 = c(performance_coauthor$f1, performance_paper$f1, performance_journal$f1),
accuracy = c(performance_coauthor$accuracy, performance_paper$accuracy, performance_journal$accuracy),
time = c(time.coauthor, time.paper[3], time.journal[3]))
compare_df
kable(compare_df,caption = "Comparision of performance for two clustering methods", digits = 2)
time.coauthor <- 3.1
compare_df <- data.frame(method = c("coauthor", "paper", "journal"),
precision = c(performance_coauthor$precision, performance_paper$precision, performance_journal$precision),
recall = c(performance_coauthor$recall, performance_paper$recall, performance_journal$recall),
f1 = c(performance_coauthor$f1, performance_paper$f1, performance_journal$f1),
accuracy = c(performance_coauthor$accuracy, performance_paper$accuracy, performance_journal$accuracy),
time = c(time.coauthor, time.paper[3], time.journal[3]))
kable(compare_df,caption = "Comparision of performance for two clustering methods", digits = 2)
compare_df
write.csv(compare_df, file = "~/Desktop/sem 2/Applied data science/Spr2017-proj4-team-14/output/paper2.comparison.result.csv")
